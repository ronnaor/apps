@model Blog.Models.Post

@{
    ViewBag.Title = "Create";
}

@section head {
    @Styles.Render("~/Styles/blog.css")
}

<h2 id="BlogTitle">Add new post</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Web, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Web, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Web, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">  
            @Html.HiddenFor(model => model.Date, new { @Value = DateTime.Now }) 
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
   
        <div class="form-group" id="img">
            @Html.CheckBox("imageCheck")
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="image1">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group" id="vid"> 
            @Html.CheckBox("videoCheck")        
            @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="video1">
                    @Html.EditorFor(model => model.Video, new { htmlAttributes = new { @class = "form-control" }} )
                </div>
                @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default link" />
            </div>
        </div>
    </div>
}

<p>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "link" })
</p>

@section scripts {
    <script type="text/javascript" src="~/scripts/funcs.js"></script>
}
